name: release

on:
  push:
    branches:
      - "main"
      - "master"
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+*"
    - "stable"
  pull_request:

env:
  APP_VERSION: "v0.0.1"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v3
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.4.2'
        host: 'linux'
        target: 'desktop'
    - name: linux build
      run: |
        ./scripts/linux_build.sh gh
    - uses: actions/upload-artifact@v3
      with:
        name: artifacts-linux-x86_64
        path: |
          ./build-linux-x86_64/*.deb
        if-no-files-found: error
        retention-days: 1
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v3
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.4.2'
        host: 'windows'
        target: 'desktop'
    - name: windows build
      run: |
        ./scripts/win_build.sh gh
    - uses: actions/upload-artifact@v3
      with:
        name: artifacts-windows-x86_64
        path: |
          ./build-windows-x86_64/*.exe
        if-no-files-found: error
        retention-days: 1

  publish:
    needs: [build]
    runs-on: ubuntu-latest
    if: |
      github.event_name != 'pull_request'
    timeout-minutes: 2
    env:
      GH_REPO: ${{ github.repository }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y gettext-base
          sudo apt install -y tree

      - if: github.event_name == 'workflow_dispatch'
        run: echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV
      - if: github.event_name == 'schedule'
        run: echo 'TAG_NAME=nightly' >> $GITHUB_ENV
      - if: |
          github.event_name == 'push' &&
          github.ref_type == 'tag'
        run: |
          TAG_NAME=${{ github.ref }}
          echo "TAG_NAME=${TAG_NAME#refs/tags/}" >> $GITHUB_ENV
          echo "BUILD_USING_TAG=true" >> $GITHUB_ENV
      - if: |
          github.event_name == 'push' &&
          github.ref_type == 'branch'
        run: |
          echo "TAG_NAME=dev" >> $GITHUB_ENV

      # - name: Rename artifacts
      #   run: |
      #     mv -v artifacts_linux/ryuu artifacts_linux/ryuu-linux
      - name: Public release
        run: |
          echo "Publishing to github release"
          tree -L 1 artifacts*
          PRERELEASE_FLAG=""
          case "$TAG_NAME" in
            *dev*|*nightly*|*beta*|*alpha*)
              echo "PRERELEASE"
              PRERELEASE_FLAG="--prerelease"
              ;;
            *)
              echo "Not PRERELEASE"
              ;;
          esac

          if [ ! "$BUILD_USING_TAG" = "true" ] ; then
            echo "Not Built using Tag"
            TAG_NAME="${{ env.APP_VERSION }}.${{ github.run_number }}-${TAG_NAME}"
          else
            echo "Built Using Tag"
          fi
          echo "TAG_NAME : ${TAG_NAME}"
          gh release create ${PRERELEASE_FLAG} "$TAG_NAME" || echo "Release creation failed, but continuing..." && true
          gh release upload --clobber "$TAG_NAME" artifacts-linux-x86_64/*
          # gh release upload --clobber "$TAG_NAME" artifacts-windows-x86_64/*

